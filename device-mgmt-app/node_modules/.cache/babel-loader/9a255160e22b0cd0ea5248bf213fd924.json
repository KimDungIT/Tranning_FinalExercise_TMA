{"ast":null,"code":"import _defineProperty from\"/home/nktoan/ndung/device-mgmt/device-mgmt-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/nktoan/ndung/device-mgmt/device-mgmt-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/nktoan/ndung/device-mgmt/device-mgmt-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/nktoan/ndung/device-mgmt/device-mgmt-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/nktoan/ndung/device-mgmt/device-mgmt-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/nktoan/ndung/device-mgmt/device-mgmt-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import TextField from\"@material-ui/core/TextField\";import Dialog from\"@material-ui/core/Dialog\";import DialogActions from\"@material-ui/core/DialogActions\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogTitle from\"@material-ui/core/DialogTitle\";import Button from\"@material-ui/core/Button\";import MenuItem from\"@material-ui/core/MenuItem\";import callApi from\"../util/ApiCaller\";import{notification}from\"antd\";import\"antd/dist/antd.css\";var DialogDevice=/*#__PURE__*/function(_Component){_inherits(DialogDevice,_Component);var _super=_createSuper(DialogDevice);function DialogDevice(props){var _this;_classCallCheck(this,DialogDevice);_this=_super.call(this,props);_this.handleSubmit=function(e){e.preventDefault();var _this$state$deviceInf=_this.state.deviceInfo,name=_this$state$deviceInf.name,hardwareType=_this$state$deviceInf.hardwareType,interfaceVersion=_this$state$deviceInf.interfaceVersion,connectionMechanism=_this$state$deviceInf.connectionMechanism,deviceHolderName=_this$state$deviceInf.deviceHolderName;var deviceInfo={name:name,hardwareType:hardwareType,interfaceVersion:interfaceVersion,connectionMechanism:connectionMechanism,deviceHolderName:deviceHolderName};var checkInsert=name&&hardwareType&&interfaceVersion&&connectionMechanism&&deviceHolderName;if(!checkInsert){notification.error({message:\"Error \",description:\"Can not insert device\"});return;}callApi(\"device\",\"POST\",deviceInfo).then(function(res){if(res.status===200){notification.success({message:\"Success\",description:\"Add device successfully!\"});_this.props.setNeedRefreshTabMenuState(true);_this.setState({name:\"\",hardwareType:\"\",interfaceVersion:\"\",connectionMechanism:\"\",deviceHolderName:\"\"});}}).catch(function(error){notification.error({message:\"Error \",description:error.message});});};_this.onChangeDiviceInfo=function(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;_this.setState(function(prevState){return{deviceInfo:_objectSpread({},prevState.deviceInfo,_defineProperty({},name,value))};});};_this.state={open:false,deviceInfo:{},deviceHolderList:[]};return _this;}_createClass(DialogDevice,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;callApi(\"device-holder\",\"GET\",null).then(function(res){if(res.status===200){_this2.setState({deviceHolderList:res.data});}}).catch(function(error){notification.error({message:\"Error \",description:error.message});});}},{key:\"render\",value:function render(){var connectionMechanismList=[{value:\"Call home\"},{value:\"Non Callhome\"}];var deviceHolderList=this.state.deviceHolderList;var hasDeviceHolderList=deviceHolderList&&deviceHolderList.length>0;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Dialog,{open:this.props.openDialog,onClose:this.props.onCloseDialog,\"aria-labelledby\":\"form-dialog-title\"},/*#__PURE__*/React.createElement(DialogTitle,{id:\"form-dialog-title\"},\"Create device\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.handleSubmit,noValidate:true,autoComplete:\"off\"},/*#__PURE__*/React.createElement(TextField,{margin:\"dense\",id:\"name\",name:\"name\",label:\"Device name\",fullWidth:true,autoFocus:true,required:true,onChange:this.onChangeDiviceInfo}),/*#__PURE__*/React.createElement(TextField,{margin:\"dense\",id:\"hardwareType\",name:\"hardwareType\",label:\"Hardware type\",fullWidth:true,required:true,onChange:this.onChangeDiviceInfo}),/*#__PURE__*/React.createElement(TextField,{margin:\"dense\",id:\"interfaceVersion\",name:\"interfaceVersion\",label:\"Interface version\",fullWidth:true,required:true,onChange:this.onChangeDiviceInfo}),/*#__PURE__*/React.createElement(TextField,{id:\"connectionMechanism\",name:\"connectionMechanism\",margin:\"dense\",select:true,label:\"Connection mechanism\",onChange:this.onChangeDiviceInfo,required:true,fullWidth:true},connectionMechanismList.map(function(option){return/*#__PURE__*/React.createElement(MenuItem,{key:option.value,value:option.value},option.value);})),hasDeviceHolderList&&/*#__PURE__*/React.createElement(TextField,{id:\"deviceHolder\",name:\"deviceHolderName\",margin:\"dense\",select:true,label:\"Device holder\",onChange:this.onChangeDiviceInfo,required:true,fullWidth:true},deviceHolderList.map(function(option){return/*#__PURE__*/React.createElement(MenuItem,{key:option.deviceHolderName,value:option.deviceHolderName},option.deviceHolderName);})),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:this.props.onCloseDialog,color:\"primary\"},\"Cancel\"),/*#__PURE__*/React.createElement(Button,{onClick:this.props.onCloseDialog,variant:\"contained\",type:\"submit\",color:\"primary\"},\"Save\"))))));}}]);return DialogDevice;}(Component);export default DialogDevice;","map":{"version":3,"sources":["/home/nktoan/ndung/device-mgmt/device-mgmt-app/src/components/DialogDevice.js"],"names":["React","Component","TextField","Dialog","DialogActions","DialogContent","DialogTitle","Button","MenuItem","callApi","notification","DialogDevice","props","handleSubmit","e","preventDefault","state","deviceInfo","name","hardwareType","interfaceVersion","connectionMechanism","deviceHolderName","checkInsert","error","message","description","then","res","status","success","setNeedRefreshTabMenuState","setState","catch","onChangeDiviceInfo","event","target","value","prevState","open","deviceHolderList","data","connectionMechanismList","hasDeviceHolderList","length","openDialog","onCloseDialog","map","option"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport callApi from \"../util/ApiCaller\";\r\nimport { notification } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nclass DialogDevice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      deviceInfo: {},\r\n      deviceHolderList: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    callApi(\"device-holder\", \"GET\", null)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          this.setState({\r\n            deviceHolderList: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        notification.error({\r\n          message: \"Error \",\r\n          description: error.message,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      name,\r\n      hardwareType,\r\n      interfaceVersion,\r\n      connectionMechanism,\r\n      deviceHolderName,\r\n    } = this.state.deviceInfo;\r\n    const deviceInfo = {\r\n      name,\r\n      hardwareType,\r\n      interfaceVersion,\r\n      connectionMechanism,\r\n      deviceHolderName,\r\n    };\r\n    const checkInsert =\r\n      name &&\r\n      hardwareType &&\r\n      interfaceVersion &&\r\n      connectionMechanism &&\r\n      deviceHolderName;\r\n    if (!checkInsert) {\r\n      notification.error({\r\n        message: \"Error \",\r\n        description: \"Can not insert device\",\r\n      });\r\n      return;\r\n    }\r\n    callApi(\"device\", \"POST\", deviceInfo)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          notification.success({\r\n            message: \"Success\",\r\n            description: \"Add device successfully!\",\r\n          });\r\n          this.props.setNeedRefreshTabMenuState(true);\r\n          this.setState({\r\n            name: \"\",\r\n            hardwareType: \"\",\r\n            interfaceVersion: \"\",\r\n            connectionMechanism: \"\",\r\n            deviceHolderName: \"\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        notification.error({\r\n          message: \"Error \",\r\n          description: error.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  onChangeDiviceInfo = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState((prevState) => ({\r\n      deviceInfo: {\r\n        ...prevState.deviceInfo,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const connectionMechanismList = [\r\n      { value: \"Call home\" },\r\n      { value: \"Non Callhome\" },\r\n    ];\r\n    let { deviceHolderList } = this.state;\r\n    const hasDeviceHolderList = deviceHolderList && deviceHolderList.length > 0;\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={this.props.openDialog}\r\n          onClose={this.props.onCloseDialog}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Create device</DialogTitle>\r\n          <DialogContent>\r\n            <form onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                label=\"Device name\"\r\n                fullWidth\r\n                autoFocus\r\n                required\r\n                onChange={this.onChangeDiviceInfo}\r\n              />\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"hardwareType\"\r\n                name=\"hardwareType\"\r\n                label=\"Hardware type\"\r\n                fullWidth\r\n                required\r\n                onChange={this.onChangeDiviceInfo}\r\n              />\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"interfaceVersion\"\r\n                name=\"interfaceVersion\"\r\n                label=\"Interface version\"\r\n                fullWidth\r\n                required\r\n                onChange={this.onChangeDiviceInfo}\r\n              />\r\n              <TextField\r\n                id=\"connectionMechanism\"\r\n                name=\"connectionMechanism\"\r\n                margin=\"dense\"\r\n                select\r\n                label=\"Connection mechanism\"\r\n                onChange={this.onChangeDiviceInfo}\r\n                required\r\n                fullWidth\r\n              >\r\n                {connectionMechanismList.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.value}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              {hasDeviceHolderList && (\r\n                <TextField\r\n                  id=\"deviceHolder\"\r\n                  name=\"deviceHolderName\"\r\n                  margin=\"dense\"\r\n                  select\r\n                  label=\"Device holder\"\r\n                  onChange={this.onChangeDiviceInfo}\r\n                  required\r\n                  fullWidth\r\n                >\r\n                  {deviceHolderList.map((option) => (\r\n                    <MenuItem\r\n                      key={option.deviceHolderName}\r\n                      value={option.deviceHolderName}\r\n                    >\r\n                      {option.deviceHolderName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              )}\r\n\r\n              <DialogActions>\r\n                <Button onClick={this.props.onCloseDialog} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={this.props.onCloseDialog}\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                >\r\n                  Save\r\n                </Button>\r\n              </DialogActions>\r\n            </form>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogDevice;\r\n"]},"metadata":{},"sourceType":"module"}